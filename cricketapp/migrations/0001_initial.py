# Generated by Django 5.2.3 on 2025-08-11 11:10

import cricketapp.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Inning",
            fields=[
                ("inning_id", models.AutoField(primary_key=True, serialize=False)),
                ("number", models.IntegerField()),
                ("total_runs", models.IntegerField(default=0)),
                ("total_wickets", models.IntegerField(default=0)),
                ("overs", models.DecimalField(decimal_places=1, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                ("match_id", models.AutoField(primary_key=True, serialize=False)),
                ("match_name", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "format",
                    models.CharField(
                        blank=True,
                        choices=[("t20", "T20"), ("odi", "ODI"), ("test", "Test")],
                        max_length=4,
                        null=True,
                    ),
                ),
                ("date", models.DateField()),
                ("venue", models.CharField(max_length=100)),
                (
                    "toss_decision",
                    models.CharField(
                        blank=True,
                        choices=[("bat", "Bat"), ("bowl", "Bowl")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("result", models.CharField(blank=True, max_length=100, null=True)),
                ("is_active", models.BooleanField(default=False)),
                ("is_live", models.BooleanField(default=False)),
                ("is_completed", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("pname", models.CharField(max_length=70)),
                (
                    "prole",
                    models.CharField(
                        choices=[
                            ("Wicket Keeper", "Wicket Keeper"),
                            ("Batsman", "Batsman"),
                            ("Bowler", "Bowler"),
                            ("All-Rounder", "All-Rounder"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "parm",
                    models.CharField(
                        choices=[("left arm", "Left Arm"), ("right arm", "Right Arm")],
                        max_length=10,
                    ),
                ),
                (
                    "pbowl_style",
                    models.CharField(
                        blank=True,
                        choices=[("fast", "Fast"), ("spin", "Spin")],
                        max_length=10,
                    ),
                ),
                ("pjr_no", models.IntegerField()),
                (
                    "pimage",
                    models.ImageField(
                        blank=True, null=True, upload_to="player_images/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                ("tid", models.AutoField(primary_key=True, serialize=False)),
                ("tname", models.CharField(max_length=70)),
                (
                    "timage",
                    models.ImageField(blank=True, null=True, upload_to="team_images/"),
                ),
                (
                    "team_type",
                    models.CharField(
                        choices=[
                            ("INT", "International"),
                            ("IPL", "Indian Premier League"),
                            ("DOM", "Domestic"),
                            ("OTH", "Other"),
                        ],
                        default="INT",
                        max_length=3,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TicketCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("price", models.DecimalField(decimal_places=2, max_digits=8)),
                ("total_seats", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("location", models.CharField(max_length=100)),
                ("is_tour", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Extras",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("byes", models.IntegerField(default=0)),
                ("leg_byes", models.IntegerField(default=0)),
                ("wides", models.IntegerField(default=0)),
                ("no_balls", models.IntegerField(default=0)),
                ("penalty_runs", models.IntegerField(default=0)),
                (
                    "inning",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.inning",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="inning",
            name="match",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="cricketapp.match"
            ),
        ),
        migrations.CreateModel(
            name="FallOfWicket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wicket_number", models.IntegerField()),
                ("score_at_fall", models.IntegerField()),
                ("over", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "inning",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.inning",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BowlingScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("overs", models.DecimalField(decimal_places=1, max_digits=4)),
                ("maidens", models.IntegerField()),
                ("runs_conceded", models.IntegerField()),
                ("wickets", models.IntegerField()),
                ("no_balls", models.IntegerField()),
                ("wides", models.IntegerField()),
                (
                    "inning",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.inning",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BattingScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("runs", models.IntegerField()),
                ("balls", models.IntegerField()),
                ("fours", models.IntegerField()),
                ("sixes", models.IntegerField()),
                (
                    "dismissal_type",
                    models.CharField(
                        choices=[
                            ("Not Out", "Not Out"),
                            ("Bowled", "Bowled"),
                            ("Caught", "Caught"),
                            ("LBW", "LBW"),
                            ("Run Out", "Run Out"),
                            ("Stumped", "Stumped"),
                            ("Hit Wicket", "Hit Wicket"),
                            ("Retired Hurt", "Retired Hurt"),
                            ("Obstructing the Field", "Obstructing the Field"),
                            ("Timed Out", "Timed Out"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "inning",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scores",
                        to="cricketapp.inning",
                    ),
                ),
                (
                    "bowler",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bowled_batsmen",
                        to="cricketapp.player",
                    ),
                ),
                (
                    "fielder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="caught_batsmen",
                        to="cricketapp.player",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "test_stats",
                    models.JSONField(default=cricketapp.models.get_default_stats_dict),
                ),
                (
                    "odi_stats",
                    models.JSONField(default=cricketapp.models.get_default_stats_dict),
                ),
                (
                    "t20_stats",
                    models.JSONField(default=cricketapp.models.get_default_stats_dict),
                ),
                (
                    "player",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stats",
                        to="cricketapp.player",
                    ),
                ),
            ],
            options={
                "verbose_name": "Player Career Stat",
                "verbose_name_plural": "Player Career Stats",
            },
        ),
        migrations.AddField(
            model_name="player",
            name="teams",
            field=models.ManyToManyField(
                blank=True, null=True, related_name="players", to="cricketapp.team"
            ),
        ),
        migrations.CreateModel(
            name="MatchSquad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_playing", models.BooleanField(default=True)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.match",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.player",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.team",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="match",
            name="team1",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="team1_matches",
                to="cricketapp.team",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="team2",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="team2_matches",
                to="cricketapp.team",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="toss_winner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="toss_winner",
                to="cricketapp.team",
            ),
        ),
        migrations.AddField(
            model_name="inning",
            name="batting_team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="cricketapp.team"
            ),
        ),
        migrations.CreateModel(
            name="TicketBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("booking_time", models.DateTimeField(auto_now_add=True)),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.match",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.ticketcategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Paid", "Paid"),
                            ("Failed", "Failed"),
                        ],
                        max_length=20,
                    ),
                ),
                ("payment_method", models.CharField(max_length=20)),
                (
                    "transaction_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("paid_at", models.DateTimeField(blank=True, null=True)),
                (
                    "booking",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.ticketbooking",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="match",
            name="tournament",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="cricketapp.tournament",
            ),
        ),
        migrations.CreateModel(
            name="MatchTicketAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("available_seats", models.IntegerField()),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.match",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.ticketcategory",
                    ),
                ),
            ],
            options={
                "unique_together": {("match", "category")},
            },
        ),
        migrations.CreateModel(
            name="TeamStanding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matches_played", models.IntegerField(default=0)),
                ("wins", models.IntegerField(default=0)),
                ("losses", models.IntegerField(default=0)),
                ("ties", models.IntegerField(default=0)),
                ("no_results", models.IntegerField(default=0)),
                ("points", models.IntegerField(default=0)),
                (
                    "net_run_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.team",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.tournament",
                    ),
                ),
            ],
            options={
                "ordering": ["-points", "-net_run_rate"],
                "unique_together": {("tournament", "team")},
            },
        ),
        migrations.CreateModel(
            name="TournamentTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.team",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cricketapp.tournament",
                    ),
                ),
            ],
            options={
                "unique_together": {("tournament", "team")},
            },
        ),
    ]
